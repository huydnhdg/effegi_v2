@model WebApplication.Models.Product
@{

}
<div class="card">
    <div class="card-header">
        <h3 class="card-title">Thông tin sản phẩm @Model.Code</h3>
    </div>
    <div class="card-body">
        @using (Html.BeginForm("EditConfirm", "Product", new { area = "Admin" }))
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.Status)
                @Html.HiddenFor(model => model.Createdate)
                @Html.HiddenFor(model => model.Createby)
                @Html.HiddenFor(model => model.Active_phone)
                @Html.HiddenFor(model => model.Active_code)
                @Html.HiddenFor(model => model.Active_date)
                @Html.HiddenFor(model => model.End_date)
                @Html.HiddenFor(model => model.Active_by)
                @Html.HiddenFor(model => model.Active_chanel)
                @Html.HiddenFor(model => model.Buydate)
                @Html.HiddenFor(model => model.BuyAdr)
                @Html.HiddenFor(model => model.Importdate)
                @Html.HiddenFor(model => model.Importchanel)
                @Html.HiddenFor(model => model.AgentC2)
                @Html.HiddenFor(model => model.Customer_date)
                @Html.HiddenFor(model => model.Wait_date)
                <div class="form-group">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Tên sản phẩm" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Serial, new { htmlAttributes = new { @class = "form-control", @placeholder = "Serial", @required = "required", @readonly = "readonly" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", @placeholder = "Serial", @required = "required", @readonly = "readonly" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.ProductCate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Loại" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control", @placeholder = "Model" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Trademark, new { htmlAttributes = new { @class = "form-control", @placeholder = "Thương hiệu" } })
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Limited, new { htmlAttributes = new { @class = "form-control", @placeholder = "Hạn", @required = "required" } })
                </div>

                <div class="form-group">
                    @Html.EditorFor(model => model.AgentC1, new { htmlAttributes = new { @class = "form-control", @placeholder = "Đại lý C1" } })
                </div>
                <div class="form-group">
                    <div class="input-group date" data-date-autoclose="true" data-provide="datepicker" data-date-format="yyyy/mm/dd">
                        @Html.EditorFor(model => model.Exportdate, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ngày xuất" } })
                        <div class="input-group-append">
                            <span class="input-group-text">
                                <i class="fa fa-calendar"></i>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control", @placeholder = "Ghi chú" } })
                </div>
                <div class="form-group text-center">
                    <button type="submit" class="btn btn-primary"><i class="ti ti-check"></i> Lưu</button>
                    <button type="button" class="btn btn-danger" data-dismiss="modal"><i class="ti ti-close"></i> Thoát</button>
                </div>

            </div>
        }
    </div>
</div>
<script>
    $(document).ready(function () {
        var status = $("#Status").val();
        if (status == 1) {
            $("#Limited").prop("readonly", true);
        }
        $("#ProductCate").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Admin/Product/GetCate",
                    type: "POST",
                    dataType: "json",
                    data: { text: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
        $("#AgentC1").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Admin/Product/GetAgent",
                    type: "POST",
                    dataType: "json",
                    data: { text: request.term },
                    success: function (data) {
                        response($.map(data, function (item) {
                            return { label: item.UserName, value: item.UserName };
                        }))

                    }
                })
            },
            messages: {
                noResults: "", results: ""
            }
        });
    })
</script>